package ui;

import java.util.*;
import java.util.stream.Collector;
import java.util.stream.Collectors;

public class KleineOefeningenList_Opgave {

	private static final String COLORS[] = { "red", "white", "blue" };

	private List<String> list;
	private List<String> list2;

	public KleineOefeningenList_Opgave() {

		/*
		 * Vul list op met de elementen van de array COLORS.
		 * Toon vervolgens het resultaat.
		 */
		list = new ArrayList<>(Arrays.asList(COLORS));
		weergevenLijst("Vult de list met de elementen van de array: ", list);

		/*
		 * Opvullen van de arrayList met de elementen van list d.m.v. addAll.
		 */

		list2 = new ArrayList<>();
		list2.addAll(list);
		
		/*
		 * Elementen van de lijst list omzetten naar hoofdletter.
		 * Elementen van de lijst list omzetten naar kleine letter.
		 */
		
		naarHoofdletterOmzetten(list);
		weergevenLijst("Plaatst alle elementen in hoofdletter: ", list);

		list = naarKleineLettersOmzetten(list);
		weergevenLijst("Plaatst alle elementen in kleine letter: ", list);

	}

	public <E> void weergevenLijst(String oplossing, List<E> list) {
		
		System.out.printf("%s%n[", oplossing);
		list.forEach(el -> System.out.printf("%s ", el));
		System.out.println("]\n");
		
	}

	public void naarHoofdletterOmzetten(List<String> list) {
		// Implementatie met Java 7:
//		ListIterator<String> iterator = list.listIterator();
//
//		while (iterator.hasNext()) {
//			String woord = iterator.next();
//			iterator.set(woord.toUpperCase());
//		}

		list.forEach(e -> e.toUpperCase());
		
//		// JAVA 8:
//		// list.replaceAll(w -> w.toUpperCase());
//		list.replaceAll(String::toUpperCase);

	}

	public List<String> naarKleineLettersOmzetten(List<String> list) {

		// JAVA 8:
		// stream overloopt elk element in list
		// map gaat dan elk element in kleine letter plaatsen
		// collector zorgt er dan voor dat al de elementen terug in de lijst zitten.

		return list.stream().map(w -> w.toLowerCase()).collect(Collectors.toList());
	}

	public static void main(String args[]) {
		new KleineOefeningenList_Opgave();
	}

} // end class KleineOefeningenList_Opgave

// comments

//declareer list en list2 van type List. De collections zullen Strings bijhouden
// Creëer arrayList list en vul op met { "red", "white", "blue" }  (= 1 instructie)
// Creëer een tweede lege arrayList (list2)
// alle elementen van list kopieren naar een tweede arrayList list2 (= 1
// instructie)
////De strings van list worden omgezet naar kleine letters en worden
// als nieuwe List<String> teruggegeven.
// -------------------------------------------------------------

//// Geef alle elementen van de List weer (laat een spatie tussen elk element).
// Gebruik printf*/
// List<String> veranderen door E typeparametersectie voor de teruggeefwaarde
// plaatsen
// --------------------------------------------------------------------------

/*
 * Toon elle elementen van een lijst om het even welk datatype.
 */
// System.out.printf("%s%n", oplossing);

// Implementatie met Java 7:
//for (E e : list)
//	System.out.printf("%s", e);
//System.out.println("\n");

// Implementatie met Java 8: (lambda)
//list.forEach(e -> System.out.printf("%s", e));
//System.out.println("\n");
