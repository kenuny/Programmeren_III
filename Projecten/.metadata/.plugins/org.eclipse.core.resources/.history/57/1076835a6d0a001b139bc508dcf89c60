package ui;

import java.util.ArrayList;
import java.util.Collection;
import java.util.Iterator;
import java.util.List;

public class Deitel_CollectionTest_709 {

	public static void main(String[] args) {

		/*------Creëert array en dynamische lijst met elementen vd array-----*/

		String[] colors = { "MAGENTA", "RED", "WHITE", "BLUE", "CYAN" };
		List<String> list = new ArrayList<>();

		for (String color : colors)
			list.add(color);

		String[] removeColors = { "RED", "WHITE", "BLUE" };
		List<String> removeList = new ArrayList<>();

		for (String color : removeColors)
			removeList.add(color);

		/*-------------Verwijdert removeColers uit de list colors------------*/

		System.out.printf("ArrayList: %n");

		for (String color : list)
			System.out.printf("%s ", color);
		
		removeColors(list, removeList);
		
		System.out.printf("%n%nArrayList after remove: %n");

		for (String color : list)
			System.out.printf("%s ", color);

	}

	private static void removeColors(Collection<String> collection, Collection<String> collectionRemove) {

		/*
		 * Plaats de iterator op de collection, zolang de pointer zegt dat er nog een volgend element is 
		 * Kijk dan of de collectionRemove het element bezit waar de pointer naar wijst in collection.
		 * Als dat element waar de pointer naar wijst d.m.v. next() er effectief inzit
		 * dan verwijder het element waar de pointer naar wijst d.m.v. it.remove()
		 * 
		 * */
		
		Iterator<String> it = collection.iterator();
		
		while (it.hasNext()) {
			if (collectionRemove.contains(it.next())) {
				it.remove();
			}
			
		}					
	}	
}
