package ui;

import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;
import java.util.Set;
import java.util.TreeSet;

public class Deitel_Maps_733 {

	public static void main(String[] args) {
		
		/*
		 * Map:
		 * 
		 * Een map associëert keys met values. Elke key in moet uniek zijn, de value kan een duplicaat zijn.
		 *  - Als alle keys en alle values uniek zijn --> one-to-one map
		 *  - Als alle keys uniek zijn en values niet --> many-to-one map
		 *  	- HashMap: Slaagt elementen op in een hash table.
		 *  	- TreeMap: Slaagt elementen op in een tree.
		 * 
		 * */
		
		Map<String, Integer> myMap = new HashMap();
		
		createMap(myMap);
		displayMap(myMap);
		
	}
	
	private static void createMap(Map<String, Integer> map) {

		Scanner scan = new Scanner(System.in);
		System.out.print("Enter a string: ");
		String input = scan.nextLine();
		
		String[] tokens = input.split(" ");
		
		for (String token : tokens) {
			String word = token.toLowerCase();
			
			if (map.containsKey(word)) {
				int count = map.get(word);
				map.put(word, count+1);
			} else {
				map.put(word, 1);
			}
				
		}
		
		
	}
	
	private static void displayMap(Map<String,Integer> map) {
		
		Set<String> keys = map.keySet();
		
		TreeSet<String> sortedKeys = new TreeSet<>();
		System.out.printf("%nMap contains:%n");
		System.out.printf("%s%10s%n%n", "key", "value");
		
		map.keySet()
		   .forEach(key -> System.out.println(key));
		
		map.values()
		   .forEach(key -> System.out.println(key));
		
		
		for (String key : sortedKeys) {
			System.out.printf("%s", key);
			
		}
		
		
		
		
		System.out.printf("%nsize: %d%nisEmpty: %b%n", map.size(), map.isEmpty());
		
		
		
	}
}
